import '../nearby_pharmacy_screen/widgets/userprofile3_item_widget.dart';import '../nearby_pharmacy_screen/widgets/userprofile4_item_widget.dart';import 'bloc/nearby_pharmacy_bloc.dart';import 'models/nearby_pharmacy_model.dart';import 'models/userprofile3_item_model.dart';import 'models/userprofile4_item_model.dart';import 'package:aayan_mateen_s_application1/core/app_export.dart';import 'package:aayan_mateen_s_application1/presentation/search_doctors_one_page/search_doctors_one_page.dart';import 'package:aayan_mateen_s_application1/widgets/app_bar/appbar_subtitle_seven.dart';import 'package:aayan_mateen_s_application1/widgets/app_bar/appbar_subtitle_two.dart';import 'package:aayan_mateen_s_application1/widgets/app_bar/appbar_trailing_image_one.dart';import 'package:aayan_mateen_s_application1/widgets/app_bar/custom_app_bar.dart';import 'package:aayan_mateen_s_application1/widgets/custom_bottom_bar.dart';import 'package:aayan_mateen_s_application1/widgets/custom_icon_button.dart';import 'package:aayan_mateen_s_application1/widgets/custom_search_view.dart';import 'package:flutter/material.dart';
// ignore_for_file: must_be_immutable
class NearbyPharmacyScreen extends StatelessWidget {NearbyPharmacyScreen({Key? key}) : super(key: key);

GlobalKey<NavigatorState> navigatorKey = GlobalKey();

static Widget builder(BuildContext context) { return BlocProvider<NearbyPharmacyBloc>(create: (context) => NearbyPharmacyBloc(NearbyPharmacyState(nearbyPharmacyModelObj: NearbyPharmacyModel()))..add(NearbyPharmacyInitialEvent()), child: NearbyPharmacyScreen()); } 
@override Widget build(BuildContext context) { return SafeArea(child: Scaffold(resizeToAvoidBottomInset: false, body: SizedBox(height: SizeUtils.height, width: double.maxFinite, child: Stack(alignment: Alignment.bottomCenter, children: [Align(alignment: Alignment.center, child: Column(mainAxisSize: MainAxisSize.min, children: [SizedBox(height: 5.v), _buildAppBar(context), SizedBox(height: 736.v, width: double.maxFinite, child: Stack(alignment: Alignment.center, children: [Align(alignment: Alignment.center, child: Container(height: 721.v, width: double.maxFinite, decoration: BoxDecoration(color: appTheme.whiteA700, borderRadius: BorderRadius.vertical(top: Radius.circular(25.h))))), SizedBox(width: double.maxFinite, child: Align(alignment: Alignment.center, child: Container(margin: EdgeInsets.only(right: 2.h), padding: EdgeInsets.symmetric(horizontal: 12.h, vertical: 15.v), decoration: AppDecoration.gradientWhiteAToWhiteA.copyWith(borderRadius: BorderRadiusStyle.customBorderTL25), child: Column(mainAxisSize: MainAxisSize.min, children: [BlocSelector<NearbyPharmacyBloc, NearbyPharmacyState, TextEditingController?>(selector: (state) => state.searchController, builder: (context, searchController) {return CustomSearchView(controller: searchController, hintText: "lbl_search3".tr, contentPadding: EdgeInsets.only(top: 9.v, right: 30.h, bottom: 9.v), borderDecoration: SearchViewStyleHelper.outlineBlack);}), SizedBox(height: 91.v), _buildUserProfile(context), SizedBox(height: 91.v)])))), _buildUserProfile1(context)]))])), CustomImageView(imagePath: ImageConstant.imgMap, height: 721.v, width: 373.h, radius: BorderRadius.vertical(top: Radius.circular(25.h)), alignment: Alignment.bottomCenter, margin: EdgeInsets.only(bottom: 25.v))])), bottomNavigationBar: _buildBottomBar(context))); } 
/// Section Widget
PreferredSizeWidget _buildAppBar(BuildContext context) { return CustomAppBar(height: 49.v, leadingWidth: 53.h, leading: Container(height: 47.v, width: 40.h, margin: EdgeInsets.only(left: 13.h, top: 2.v), child: Stack(alignment: Alignment.center, children: [CustomImageView(imagePath: ImageConstant.imgMegaphone, height: 13.v, width: 18.h, alignment: Alignment.center, margin: EdgeInsets.only(left: 2.h, right: 20.h, bottom: 34.v)), Padding(padding: EdgeInsets.only(top: 7.v), child: CustomIconButton(height: 40.adaptSize, width: 40.adaptSize, decoration: IconButtonStyleHelper.outlineGrayTL101, alignment: Alignment.center, onTap: () {onTapBtnArrowLeft(context);}, child: CustomImageView(imagePath: ImageConstant.imgArrowLeftBlueGray90003)))])), title: Container(height: 47.07.v, width: 185.h, margin: EdgeInsets.only(left: 5.h), child: Stack(alignment: Alignment.bottomCenter, children: [AppbarSubtitleSeven(text: "lbl_search".tr, margin: EdgeInsets.only(left: 98.h, right: 24.h, bottom: 29.v)), AppbarSubtitleTwo(text: "lbl_nearby_pharmacy".tr, margin: EdgeInsets.only(top: 17.v))])), actions: [AppbarTrailingImageOne(imagePath: ImageConstant.imgThumbsUpWhiteA700, margin: EdgeInsets.fromLTRB(14.h, 2.v, 14.h, 33.v))]); } 
/// Section Widget
Widget _buildUserProfile(BuildContext context) { return Expanded(child: Padding(padding: EdgeInsets.only(left: 46.h, right: 43.h), child: BlocSelector<NearbyPharmacyBloc, NearbyPharmacyState, NearbyPharmacyModel?>(selector: (state) => state.nearbyPharmacyModelObj, builder: (context, nearbyPharmacyModelObj) {return GridView.builder(shrinkWrap: true, gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(mainAxisExtent: 66.v, crossAxisCount: 2, mainAxisSpacing: 93.h, crossAxisSpacing: 93.h), physics: BouncingScrollPhysics(), itemCount: nearbyPharmacyModelObj?.userprofile3ItemList.length ?? 0, itemBuilder: (context, index) {Userprofile3ItemModel model = nearbyPharmacyModelObj?.userprofile3ItemList[index] ?? Userprofile3ItemModel(); return Userprofile3ItemWidget(model);});}))); } 
/// Section Widget
Widget _buildUserProfile1(BuildContext context) { return Align(alignment: Alignment.bottomLeft, child: SizedBox(height: 736.v, child: BlocSelector<NearbyPharmacyBloc, NearbyPharmacyState, NearbyPharmacyModel?>(selector: (state) => state.nearbyPharmacyModelObj, builder: (context, nearbyPharmacyModelObj) {return ListView.separated(padding: EdgeInsets.only(top: 526.v, bottom: 35.v), scrollDirection: Axis.horizontal, separatorBuilder: (context, index) {return SizedBox(width: 10.h);}, itemCount: nearbyPharmacyModelObj?.userprofile4ItemList.length ?? 0, itemBuilder: (context, index) {Userprofile4ItemModel model = nearbyPharmacyModelObj?.userprofile4ItemList[index] ?? Userprofile4ItemModel(); return Userprofile4ItemWidget(model);});}))); } 
/// Section Widget
Widget _buildBottomBar(BuildContext context) { return CustomBottomBar(onChanged: (BottomBarEnum type) {Navigator.pushNamed(navigatorKey.currentContext!, getCurrentRoute(type));}); } 
///Handling route based on bottom click actions
String getCurrentRoute(BottomBarEnum type) { switch (type) {case BottomBarEnum.Icongray500: return "/"; case BottomBarEnum.Icongray50023x26: return "/"; case BottomBarEnum.Searchblue50: return AppRoutes.searchDoctorsOnePage; case BottomBarEnum.Icongray50023x24: return "/"; default: return "/";} } 
///Handling page based on route
Widget getCurrentPage(BuildContext context, String currentRoute, ) { switch (currentRoute) {case AppRoutes.searchDoctorsOnePage: return SearchDoctorsOnePage.builder(context); default: return DefaultWidget();} } 

/// Navigates to the previous screen.
onTapBtnArrowLeft(BuildContext context) { NavigatorService.goBack(); } 
 }
