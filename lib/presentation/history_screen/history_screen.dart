import 'bloc/history_bloc.dart';import 'models/history_model.dart';import 'package:aayan_mateen_s_application1/core/app_export.dart';import 'package:aayan_mateen_s_application1/widgets/app_bar/appbar_leading_iconbutton_one.dart';import 'package:aayan_mateen_s_application1/widgets/app_bar/appbar_subtitle_five.dart';import 'package:aayan_mateen_s_application1/widgets/app_bar/appbar_trailing_iconbutton.dart';import 'package:aayan_mateen_s_application1/widgets/app_bar/custom_app_bar.dart';import 'package:flutter/material.dart';class HistoryScreen extends StatelessWidget {const HistoryScreen({Key? key}) : super(key: key);

static Widget builder(BuildContext context) { return BlocProvider<HistoryBloc>(create: (context) => HistoryBloc(HistoryState(historyModelObj: HistoryModel()))..add(HistoryInitialEvent()), child: HistoryScreen()); } 
@override Widget build(BuildContext context) { return BlocBuilder<HistoryBloc, HistoryState>(builder: (context, state) {return SafeArea(child: Scaffold(appBar: _buildAppBar(context), body: Container(width: double.maxFinite, padding: EdgeInsets.symmetric(horizontal: 24.h, vertical: 22.v), child: Column(crossAxisAlignment: CrossAxisAlignment.start, children: [Text("lbl_this_month".tr, style: CustomTextStyles.titleMediumSemiBold_1), SizedBox(height: 28.v), _buildFrameRow(context, counterText: "lbl_feb_25".tr, observationText: "msg_end_of_observation".tr), SizedBox(height: 17.v), Padding(padding: EdgeInsets.only(right: 49.h), child: Row(crossAxisAlignment: CrossAxisAlignment.start, children: [Padding(padding: EdgeInsets.only(top: 2.v, bottom: 84.v), child: Text("lbl_feb_25".tr, style: CustomTextStyles.bodyMediumGray60002)), Expanded(child: Padding(padding: EdgeInsets.only(left: 24.h), child: Column(crossAxisAlignment: CrossAxisAlignment.start, children: [Text("lbl_blood_analysis".tr, style: CustomTextStyles.titleSmallInterGray90002), SizedBox(height: 5.v), Opacity(opacity: 0.7, child: Text("msg_red_blood_cell".tr, style: CustomTextStyles.bodySmallGray90002_2)), SizedBox(height: 7.v), Opacity(opacity: 0.7, child: Text("msg_hemogoblin_142".tr, style: CustomTextStyles.bodySmallGray90002_2)), SizedBox(height: 5.v), Opacity(opacity: 0.7, child: Text("msg_hematocrit_33_6".tr, style: CustomTextStyles.bodySmallGray90002_2)), SizedBox(height: 7.v), Opacity(opacity: 0.7, child: Text("msg_white_blood_cells".tr, style: CustomTextStyles.bodySmallGray90002_2))])))])), SizedBox(height: 13.v), Padding(padding: EdgeInsets.only(right: 46.h), child: _buildFrameRow1(context, febCounter: "lbl_feb_25".tr, bloodAnalysis: "lbl_blood_analysis".tr, redBloodCell: "msg_red_blood_cell2".tr, weight: "msg_hemogoblin_122".tr, hematocrit: "msg_hematocrit_47_7".tr, whiteBloodCells: "msg_white_blood_cells2".tr)), SizedBox(height: 32.v), Text("lbl_january".tr, style: CustomTextStyles.titleMediumSemiBold_1), SizedBox(height: 26.v), _buildFrameRow(context, counterText: "lbl_feb_25".tr, observationText: "msg_end_of_observation".tr), SizedBox(height: 17.v), Padding(padding: EdgeInsets.only(right: 46.h), child: Row(crossAxisAlignment: CrossAxisAlignment.start, children: [Padding(padding: EdgeInsets.only(top: 2.v, bottom: 84.v), child: Text("lbl_feb_25".tr, style: CustomTextStyles.bodyMediumGray60002)), Expanded(child: Padding(padding: EdgeInsets.only(left: 24.h), child: Column(crossAxisAlignment: CrossAxisAlignment.start, children: [Text("lbl_blood_analysis".tr, style: CustomTextStyles.titleSmallInterGray90002), SizedBox(height: 5.v), Opacity(opacity: 0.7, child: Text("msg_red_blood_cell3".tr, style: CustomTextStyles.bodySmallGray90002_2)), SizedBox(height: 7.v), Opacity(opacity: 0.7, child: Text("msg_hemogoblin_132".tr, style: CustomTextStyles.bodySmallGray90002_2)), SizedBox(height: 5.v), Opacity(opacity: 0.7, child: Text("msg_hematocrit_37_7".tr, style: CustomTextStyles.bodySmallGray90002_2)), SizedBox(height: 7.v), Opacity(opacity: 0.7, child: Text("msg_white_blood_cells3".tr, style: CustomTextStyles.bodySmallGray90002_2))])))])), SizedBox(height: 13.v), Padding(padding: EdgeInsets.only(right: 46.h), child: _buildFrameRow1(context, febCounter: "lbl_feb_25".tr, bloodAnalysis: "lbl_blood_analysis".tr, redBloodCell: "msg_red_blood_cell2".tr, weight: "msg_hemogoblin_118".tr, hematocrit: "msg_hematocrit_38_7".tr, whiteBloodCells: "msg_white_blood_cells4".tr)), SizedBox(height: 20.v)]))));}); } 
/// Section Widget
PreferredSizeWidget _buildAppBar(BuildContext context) { return CustomAppBar(leadingWidth: 56.h, leading: AppbarLeadingIconbuttonOne(imagePath: ImageConstant.imgArrowLeftGray90002, margin: EdgeInsets.only(left: 16.h, top: 8.v, bottom: 8.v), onTap: () {onTapArrowLeft(context);}), centerTitle: true, title: AppbarSubtitleFive(text: "lbl_medical_record".tr), actions: [AppbarTrailingIconbutton(imagePath: ImageConstant.imgDotsGray90002, margin: EdgeInsets.symmetric(horizontal: 16.h, vertical: 8.v))]); } 
/// Common widget
Widget _buildFrameRow(BuildContext context, {required String counterText, required String observationText, }) { return Row(children: [Text(counterText, style: CustomTextStyles.bodyMediumGray60002.copyWith(color: appTheme.gray60002)), Padding(padding: EdgeInsets.only(left: 24.h), child: Text(observationText, style: CustomTextStyles.titleSmallInterGray90002.copyWith(color: appTheme.gray90002)))]); } 
/// Common widget
Widget _buildFrameRow1(BuildContext context, {required String febCounter, required String bloodAnalysis, required String redBloodCell, required String weight, required String hematocrit, required String whiteBloodCells, }) { return Row(crossAxisAlignment: CrossAxisAlignment.start, children: [Padding(padding: EdgeInsets.only(top: 2.v, bottom: 84.v), child: Text(febCounter, style: CustomTextStyles.bodyMediumGray60002.copyWith(color: appTheme.gray60002))), Expanded(child: Padding(padding: EdgeInsets.only(left: 24.h), child: Column(crossAxisAlignment: CrossAxisAlignment.start, children: [Text(bloodAnalysis, style: CustomTextStyles.titleSmallInterGray90002.copyWith(color: appTheme.gray90002)), SizedBox(height: 5.v), Opacity(opacity: 0.7, child: Text(redBloodCell, style: CustomTextStyles.bodySmallGray90002_2.copyWith(color: appTheme.gray90002.withOpacity(0.6)))), SizedBox(height: 7.v), Opacity(opacity: 0.7, child: Text(weight, style: CustomTextStyles.bodySmallGray90002_2.copyWith(color: appTheme.gray90002.withOpacity(0.6)))), SizedBox(height: 5.v), Opacity(opacity: 0.7, child: Text(hematocrit, style: CustomTextStyles.bodySmallGray90002_2.copyWith(color: appTheme.gray90002.withOpacity(0.6)))), SizedBox(height: 7.v), Text(whiteBloodCells, style: theme.textTheme.bodySmall!.copyWith(color: appTheme.gray60002))])))]); } 

/// Navigates to the previous screen.
onTapArrowLeft(BuildContext context) { NavigatorService.goBack(); } 
 }
