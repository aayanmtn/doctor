import 'dart:ui';
import 'package:flutter/material.dart';
import '../../core/app_export.dart';

/// Helper class for managing themes and colors.
class ThemeHelper {
  // The current app theme
  var _appTheme = PrefUtils().getThemeData();

// A map of custom color themes supported by the app
  Map<String, PrimaryColors> _supportedCustomColor = {
    'primary': PrimaryColors()
  };

// A map of color schemes supported by the app
  Map<String, ColorScheme> _supportedColorScheme = {
    'primary': ColorSchemes.primaryColorScheme
  };

  /// Returns the primary colors for the current theme.
  PrimaryColors _getThemeColors() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedCustomColor.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    return _supportedCustomColor[_appTheme] ?? PrimaryColors();
  }

  /// Returns the current theme data.
  ThemeData _getThemeData() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedColorScheme.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    var colorScheme =
        _supportedColorScheme[_appTheme] ?? ColorSchemes.primaryColorScheme;
    return ThemeData(
      visualDensity: VisualDensity.standard,
      colorScheme: colorScheme,
      textTheme: TextThemes.textTheme(colorScheme),
      scaffoldBackgroundColor: appTheme.whiteA700,
      outlinedButtonTheme: OutlinedButtonThemeData(
        style: OutlinedButton.styleFrom(
          backgroundColor: Colors.transparent,
          side: BorderSide(
            color: colorScheme.primary,
            width: 1.h,
          ),
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(19.h),
          ),
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
      elevatedButtonTheme: ElevatedButtonThemeData(
        style: ElevatedButton.styleFrom(
          backgroundColor: colorScheme.primary,
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(19.h),
          ),
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
      radioTheme: RadioThemeData(
        fillColor: MaterialStateColor.resolveWith((states) {
          if (states.contains(MaterialState.selected)) {
            return colorScheme.primary;
          }
          return colorScheme.onSurface;
        }),
        visualDensity: const VisualDensity(
          vertical: -4,
          horizontal: -4,
        ),
      ),
      checkboxTheme: CheckboxThemeData(
        fillColor: MaterialStateColor.resolveWith((states) {
          if (states.contains(MaterialState.selected)) {
            return colorScheme.primary;
          }
          return colorScheme.onSurface;
        }),
        side: BorderSide(
          width: 1,
        ),
        visualDensity: const VisualDensity(
          vertical: -4,
          horizontal: -4,
        ),
      ),
      dividerTheme: DividerThemeData(
        thickness: 122,
        space: 122,
        color: appTheme.gray20001,
      ),
    );
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors themeColor() => _getThemeColors();

  /// Returns the current theme data.
  ThemeData themeData() => _getThemeData();
}

/// Class containing the supported text theme styles.
class TextThemes {
  static TextTheme textTheme(ColorScheme colorScheme) => TextTheme(
        bodyLarge: TextStyle(
          color: appTheme.blueGray200,
          fontSize: 16.fSize,
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w400,
        ),
        bodyMedium: TextStyle(
          color: appTheme.gray90002,
          fontSize: 14.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w400,
        ),
        bodySmall: TextStyle(
          color: appTheme.gray60002,
          fontSize: 12.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w400,
        ),
        displayMedium: TextStyle(
          color: appTheme.black90001,
          fontSize: 40.fSize,
          fontFamily: 'Montserrat',
          fontWeight: FontWeight.w700,
        ),
        displaySmall: TextStyle(
          color: appTheme.whiteA700,
          fontSize: 36.fSize,
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w600,
        ),
        headlineLarge: TextStyle(
          color: colorScheme.onErrorContainer,
          fontSize: 30.fSize,
          fontFamily: 'Montserrat',
          fontWeight: FontWeight.w700,
        ),
        headlineMedium: TextStyle(
          color: appTheme.black90001,
          fontSize: 28.fSize,
          fontFamily: 'Montserrat',
          fontWeight: FontWeight.w600,
        ),
        headlineSmall: TextStyle(
          color: appTheme.gray90001,
          fontSize: 24.fSize,
          fontFamily: 'Manrope',
          fontWeight: FontWeight.w700,
        ),
        labelLarge: TextStyle(
          color: appTheme.gray700,
          fontSize: 12.fSize,
          fontFamily: 'Urbanist',
          fontWeight: FontWeight.w500,
        ),
        labelMedium: TextStyle(
          color: appTheme.black90001,
          fontSize: 10.fSize,
          fontFamily: 'Montserrat',
          fontWeight: FontWeight.w600,
        ),
        labelSmall: TextStyle(
          color: appTheme.whiteA700,
          fontSize: 8.fSize,
          fontFamily: 'Lato',
          fontWeight: FontWeight.w900,
        ),
        titleLarge: TextStyle(
          color: appTheme.whiteA700,
          fontSize: 20.fSize,
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w600,
        ),
        titleMedium: TextStyle(
          color: appTheme.gray90002,
          fontSize: 16.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w700,
        ),
        titleSmall: TextStyle(
          color: appTheme.blueGray500,
          fontSize: 14.fSize,
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w600,
        ),
      );
}

/// Class containing the supported color schemes.
class ColorSchemes {
  static final primaryColorScheme = ColorScheme.light(
    // Primary colors
    primary: Color(0XFF0E82FD),
    primaryContainer: Color(0XFF091C3F),
    secondaryContainer: Color(0XFF007AFF),

    // Error colors
    errorContainer: Color(0XFF49454F),
    onError: Color(0XFF717171),
    onErrorContainer: Color(0XFF0C0C0C),

    // On colors(text colors)
    onPrimary: Color(0XFF0F0F0F),
    onPrimaryContainer: Color(0XFFA0A7BA),
  );
}

/// Class containing custom colors for a primary theme.
class PrimaryColors {
  // Amber
  Color get amber400 => Color(0XFFF7CB2E);
  Color get amberA200 => Color(0XFFFFD040);
  Color get amberA400 => Color(0XFFFFC000);
  Color get amberA700 => Color(0XFFFCA70D);

  // Black
  Color get black900 => Color(0XFF000007);
  Color get black90001 => Color(0XFF000000);

  // Blue
  Color get blue50 => Color(0XFFD9E4FF);
  Color get blue5001 => Color(0XFFEAF2FF);
  Color get blueA400 => Color(0XFF247CFF);
  Color get blueA700 => Color(0XFF0165FF);
  Color get blueA70001 => Color(0XFF006AFF);

  // BlueGray
  Color get blueGray100 => Color(0XFFCDD2DE);
  Color get blueGray10001 => Color(0XFFD9D9D9);
  Color get blueGray10002 => Color(0XFFC4D2DF);
  Color get blueGray10003 => Color(0XFFD1D5DB);
  Color get blueGray10004 => Color(0XFFD7D7D7);
  Color get blueGray10005 => Color(0XFFCBDFE1);
  Color get blueGray200 => Color(0XFFADB3BC);
  Color get blueGray300 => Color(0XFF8C98BE);
  Color get blueGray30001 => Color(0XFF8A96BC);
  Color get blueGray400 => Color(0XFF878B91);
  Color get blueGray40001 => Color(0XFF6F8BA4);
  Color get blueGray40002 => Color(0XFF898A8D);
  Color get blueGray50 => Color(0XFFF0F1F5);
  Color get blueGray500 => Color(0XFF6A769A);
  Color get blueGray50067 => Color(0X67617B9C);
  Color get blueGray600 => Color(0XFF616E84);
  Color get blueGray700 => Color(0XFF3B566E);
  Color get blueGray70001 => Color(0XFF50555C);
  Color get blueGray800 => Color(0XFF2E384D);
  Color get blueGray900 => Color(0XFF232F55);
  Color get blueGray90001 => Color(0XFF090F47);
  Color get blueGray90002 => Color(0XFF333333);
  Color get blueGray90003 => Color(0XFF222B45);
  Color get blueGray90004 => Color(0XFF292A2E);
  Color get blueGray90033 => Color(0X33242A37);

  // BlueGraye
  Color get blueGray1007e => Color(0X7ED6D8E5);

  // BlueGrayB
  Color get blueGray900B2 => Color(0XB2080E47);

  // Cyan
  Color get cyan400 => Color(0XFF37B9C5);

  // DeepOrange
  Color get deepOrangeA200 => Color(0XFFE8753D);
  Color get deepOrangeA20026 => Color(0X26F3743C);

  // Gray
  Color get gray100 => Color(0XFFF2F3FF);
  Color get gray10001 => Color(0XFFF2F4F7);
  Color get gray10002 => Color(0XFFF4F4F4);
  Color get gray10003 => Color(0XFFEFF7FF);
  Color get gray10004 => Color(0XFFF4F7F9);
  Color get gray10005 => Color(0XFFF0F2F6);
  Color get gray10006 => Color(0XFFF0F6FF);
  Color get gray10007 => Color(0XFFF1F4F7);
  Color get gray10008 => Color(0XFFF5F5F5);
  Color get gray200 => Color(0XFFEDEDED);
  Color get gray20001 => Color(0XFFF0F0F0);
  Color get gray20002 => Color(0XFFEBEBEB);
  Color get gray20003 => Color(0XFFEFEFEF);
  Color get gray20004 => Color(0XFFE8E8E8);
  Color get gray20005 => Color(0XFFEFEDE9);
  Color get gray300 => Color(0XFFE0E0E0);
  Color get gray30001 => Color(0XFFE6E6E6);
  Color get gray30002 => Color(0XFFE1E1E1);
  Color get gray400 => Color(0XFFC2C2C2);
  Color get gray40001 => Color(0XFFC6C6C6);
  Color get gray50 => Color(0XFFFCFCFC);
  Color get gray500 => Color(0XFF989BA5);
  Color get gray50001 => Color(0XFF9E9E9E);
  Color get gray5001 => Color(0XFFF8F9FD);
  Color get gray5002 => Color(0XFFF8F8F8);
  Color get gray600 => Color(0XFF818286);
  Color get gray60001 => Color(0XFF6B6C70);
  Color get gray60002 => Color(0XFF757575);
  Color get gray700 => Color(0XFF616161);
  Color get gray80075 => Color(0X753B3B3B);
  Color get gray900 => Color(0XFF151921);
  Color get gray90001 => Color(0XFF111111);
  Color get gray90002 => Color(0XFF242424);
  Color get gray90003 => Color(0XFF101828);

  // Grayf
  Color get gray7007f => Color(0X7F565B63);

  // Green
  Color get green50 => Color(0XFFE9FAEF);
  Color get greenA700 => Color(0XFF22C55E);
  Color get greenA70001 => Color(0XFF00A71A);
  Color get greenA70002 => Color(0XFF00AC30);

  // Indigo
  Color get indigo100 => Color(0XFFBFB5FF);
  Color get indigo50 => Color(0XFFDFE2FF);
  Color get indigo5001 => Color(0XFFDBDAFF);
  Color get indigo5002 => Color(0XFFDEE8F5);
  Color get indigo5003 => Color(0XFFE4E8EE);
  Color get indigoA100 => Color(0XFFA0ABFF);
  Color get indigoA20011 => Color(0X115A6CEA);
  Color get indigoA400 => Color(0XFF504DE5);
  Color get indigoA40001 => Color(0XFF4157FF);
  Color get indigoA70033 => Color(0X331B39FF);

  // LightBlue
  Color get lightBlue200 => Color(0XFF7ACEFA);

  // LightBlueAd
  Color get lightBlueA2003d => Color(0X3D40BFFF);

  // LightGreen
  Color get lightGreen50 => Color(0XFFF3F2E9);

  // Lime
  Color get lime50 => Color(0XFFFEF6EC);

  // Orange
  Color get orange200 => Color(0XFFF7C480);

  // Orangec
  Color get orange4000c => Color(0X0CFFA41B);

  // Red
  Color get red200 => Color(0XFFE8899E);
  Color get red50 => Color(0XFFFFEEEF);
  Color get red5001 => Color(0XFFFDF1F3);
  Color get redA200 => Color(0XFFFF4C5E);
  Color get redA700 => Color(0XFFE40000);
  Color get redA70001 => Color(0XFFD0011B);
  Color get redA70002 => Color(0XFFFF0000);
  Color get redA70003 => Color(0XFFF80000);

  // Teal
  Color get teal400 => Color(0XFF35889B);

  // White
  Color get whiteA700 => Color(0XFFFFFFFF);
  Color get whiteA70001 => Color(0XFFFEFEFF);

  // Yellow
  Color get yellow800 => Color(0XFFFEAD1D);
  Color get yellowA700 => Color(0XFFFFD600);
}

PrimaryColors get appTheme => ThemeHelper().themeColor();
ThemeData get theme => ThemeHelper().themeData();
